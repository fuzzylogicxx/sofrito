// Temporary

#global-header {
  display: none;
}

///////////////////////////////////
// Chosen Typefaces
///////////////////////////////////

$base-font-family: Helvetica Neue,sans-serif;
$base-font-family-fonts-loaded: Source Sans Pro,Helvetica Neue,sans-serif;

$alt-font-family: serif;
$alt-font-family-fonts-loaded: Source Serif Pro, serif;



// @font-face declarations (if self-hosting)

@font-face {
  font-family: Source Sans Pro;
  src: url(/assets/type/SourceSansPro-LightIt.ttf.woff2) format("woff2"),
       url(/assets/type/SourceSansPro-LightIt.ttf.woff) format("woff"),
       url(/assets/type/SourceSansPro-LightIt.otf) format("opentype");
  font-style: italic;
  font-display: swap;
}

@font-face {
  font-family: Source Sans Pro;
  src: url(/assets/type/SourceSansPro-Light.ttf.woff2) format("woff2"),
       url(/assets/type/SourceSansPro-Light.ttf.woff) format("woff"),
       url(/assets/type/SourceSansPro-Light.otf) format("opentype");
  font-display: swap;
}

@font-face {
  font-family: Source Sans Pro;
  src: url(/assets/type/SourceSansPro-SemiBold.ttf.woff2) format("woff2"),
       url(/assets/type/SourceSansPro-SemiBold.ttf.woff) format("woff"),
       url(/assets/type/SourceSansPro-SemiBold.otf) format("opentype");
  font-weight:700;
  font-display: swap;
}

@font-face {
  font-family: Source Serif Pro;
  src: url(/assets/type/SourceSerifPro-Regular.ttf.woff2) format("woff2"),
       url(/assets/type/SourceSerifPro-Regular.ttf.woff) format("woff"),
       url(/assets/type/SourceSerifPro-Regular.otf) format("opentype");
  font-weight: 500;
  font-display: swap;
}



///////////////////////////////////
// Sizing (parts 1 and 2)
///////////////////////////////////

// Part 1: Work out a familar, good base size as follows:
// 1) Get x-height of your typeface (e.g. 0.480) by forking this x-height tool https://codepen.io/timbrown/pen/VrbWNx like this https://codepen.io/fuzzylogicx/pen/QPKNjV
// 2) Get its "reciprocal" using (1/$xheight) e.g. 1/0.480 = 2.0833333333
// 3) Calculate a size range: multiply reciprocal by familiar "limits" (Times .419em, Verdana .579em). For example .8729166667em to 1.20625em.
// 4) Choose a value in between e.g. 1.04 (based on (.8729166667 + 1.20625) / 2 = 1.0395833334). Or size up or down within our range based on gut instinct.

$font-size-custom-base: 1.1;

// Part 2: Generate a modular scale based on our chosen font-size and a sensible ratio (for example 3:5 (or 1.667), a major sixth)
// Use https://www.modularscale.com/ and set to appropriate base font-size and ratio.
// Sofrito modular scale: https://www.modularscale.com/?1.1&em&1.667

$ms-ratio: 1.667;

@function scale-value($step-number) {

  @if $step-number == 0 {
    @return 1;
  }
  @return pow($ms-ratio, $step-number);
}

//@debug scale-value(3);



///////////////////////////////////
// Measure
///////////////////////////////////

// arrived at by trying em-based values for max-width and min-width in browser and deciding what’s best by eye



///////////////////////////////////
// Leading
///////////////////////////////////

// previously used aribitrary/eye-balled numbers like 1.4 and 1.5...
// but since that model is quite inflexible to apply across all the site’s elements, we’re just as well picking line-height values from the scale throughout the site.
// Start with ones for standard body copy.





///////////////////////////////////
// Gutter
///////////////////////////////////





// Body Text

:root {
  color: $text-color;
  font-family: $base-font-family-fonts-loaded;
  font-size: $font-size-custom-base+rem;
  font-feature-settings: "kern", "liga", "clig", "calt", "onum", "pnum";
}

@supports (font-kerning: normal) and (font-variant-ligatures: common-ligatures contextual) and (font-variant-numeric: oldstyle-nums proportional-nums) {
  :root {
    font-kerning: normal;
    font-variant-ligatures: common-ligatures contextual;
    font-variant-numeric: oldstyle-nums proportional-nums;
    font-feature-settings: normal;
  }
}

//body{
//  font-family:Helvetica Neue,sans-serif;background:#fff;margin:0;color:#222
//}
//.fonts-loaded body{
//  font-family: $base-font-family-fonts-loaded;
//}

body {
  font-family: $base-font-family-fonts-loaded;
  // line-height set at the body level per Tim Brown rather than at the html level per normalize.css
  line-height: 1.5;
  //@include at-least($width-pressure-point-one) {
  //  line-height: $text-line-height-max;
  //}
}




// Small Text (captions, labels, help text, or for use when screen real estate is limited, as in banner ads. But small text involves more than simply reducing the font size.)

// Featured Text
// Display Text (top-level headings, hero text, and logotype lockups)
// Signage & UI (website navigation, footers full of links, labels in a grid of products, previous and next links, buttons, and strong calls to action)
// Tabular Data
// Technical Accuracy (In code, symbols and their sequence are critical. The same goes for math, which can include complex glyph placement. Poetry, screenplays, and infographics)
// Ads

h1,
h2,
h3 {
  font-family: $alt-font-family-fonts-loaded;
  font-weight: 500;
}
