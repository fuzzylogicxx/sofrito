@import "components/variables_general.scss";
@import "components/mixins_general.scss";
@import "components/collected_reset_and_general_improvement_wisdom.scss";
@import "components/typography.scss";
@import "components/forms_and_buttons.scss";
@import "components/list_utils.scss";
@import "components/tables.scss";
@import "components/tabs.scss";
@import "components/code.scss";
@import "components/skip_links.scss";
@import "components/aspect_ratio.scss";
@import "components/svg_link_icons.scss";
@import "components/media_objects.scss";
@import "components/breakout.scss";

// Note: there are a few additional imports at the end of this file, too. (houdini show-and-hide, print CSS, layout-enhanced/grid, cookie consent).



///////////////////////////////////
// Common patterns
///////////////////////////////////

// Container utility for responsive layout

@mixin container() {

  @include at-least($bp-wide-two) {
    margin: 0 2%;
  }

  @include at-least($bp-wide-three) {
    margin: 0 6%;
  }

  @include at-least($bp-wide-four) {
    margin: 0 10%;
  }

  @include at-least($bp-wide-five) {
    margin: 0 auto;
    max-width: 80em;
  }

}

.container {
  @include container();
}


// Grid with 3 equal-width colummns

@mixin trio() {
  display: grid;
  grid-column-gap: $space-s;
  grid-template-columns: repeat(3, 1fr);
}

.trio {
  @include at-least($bp-wide-one) {
    @include trio();
  }
}

.min-duo-max-trio {
  columns: 2;
  @include at-least($bp-wide-one) {
    columns: unset;
    @include trio();
  }
}


// Header Banners

.header-banner {
  background: $color-light;
  overflow: auto;
  padding-top: $space-s;
  padding-bottom: $space-s;
}



///////////////////////////////////
// Layout (page-level)
///////////////////////////////////

// We want a good "document outline" with proper sectioning elements at the top-level as far as possible
// Percentage-based padding within top-level elements works well until screen gets crazy-wide
// Then you ideally want a max-width and margin 0 auto on the content.
// But if you want flexibility to have solid full-width backgrounds on elements then you need a nested element to be able to set a width and margin


/*.global-header {
  padding: $space-s;
}

.primary-content {
  padding: $space-s $space-s $space-l;

  &.with-header-banner {
    padding-top: 0;
  }
}

.global-footer {
  padding: $space-l $space-s;
}
*/



///////////////////////////////////
// Header
///////////////////////////////////


.global-header {
  border-bottom: 1px solid $border-color;
  padding: $space-s 0;

  a {
    text-decoration: none;
  }

  a:hover {
    color: $color-complimentary;
  }

}

.header-content {
  display: flex;
}

.logo {
  margin-right: auto;
}

.header-menu {
  margin-right: $space-s;

  ul {
    margin-bottom: 0;
  }

}

.header-menu-toggle .special-link-icon {
  font-size: .6em;
  margin-top: .3em;
}




/////////////
// Footer
/////////////

.global-footer {
  background: $text-color;
  color: #fff;
  padding: $space-l 0 $space-m;

  ul {
    margin-bottom: $space-s;
    columns: 2;
  }

  li {
    margin-bottom: scale-value(-5)+rem;
  }

  a {
    color: #fff;
    text-decoration: none;

    &:hover {
      text-decoration: underline;
    }
  }

}



///////////////////
// Primary Content
///////////////////

.primary-content {
  padding: $space-s 0 $space-l;

  &.with-header-banner {
    padding-top: 0;
  }
}


///////////////////
// Index page
///////////////////

.features-benefits {

  section {
    margin-top: $space-m;
  }

}





// Houdini for disclosure elements including dropdowns
@import "components/houdini.scss";

// Enhance our basic layout using CSS grid.
@import "components/layout_enhanced.scss";

// Cookie consent: we need it by law.
@import "components/cookieconsent2_3.1.0.min.scss";

// Print styles
@import "components/print.scss";
